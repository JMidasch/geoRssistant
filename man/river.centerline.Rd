% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/river_centerline.R
\name{river.centerline}
\alias{river.centerline}
\title{Extract River Centerlines from Points, Shapefiles, or GeoPackages}
\usage{
river.centerline(input_raster, points, output_dir)
}
\arguments{
\item{input_raster}{Path to the input DEM file in GeoTIFF format (`.tif`).}

\item{points}{Either:
- A `data.frame` or `matrix` with columns `x` and `y`, specifying the coordinates of the starting points.
- A path to a shapefile (`.shp`), GeoPackage (`.gpkg`), or `terra` vector file containing the starting points.}

\item{output_dir}{Path to save the output flow paths raster or vector file.}
}
\value{
A file path to the output flow paths file (raster or vector format).
}
\description{
This function processes a high-resolution Digital Elevation Model (DEM) to determine water flow paths
starting from specific points, based on the D8 flow direction algorithm. Points can be provided as a
`data.frame`, shapefile, GeoPackage, or `terra` vector.
}
\details{
The function performs the following steps:
1. Fills depressions in the DEM to ensure continuous flow simulation using the D8 algorithm.
2. Computes flow direction from the DEM.
3. Traces water flow paths starting from user-provided points or vector files.

Intermediate products, such as the filled DEM and flow direction raster, are saved with filenames
derived from the input DEM. If these files already exist, they are reused to save computation time on reruns.
}
\examples{
\dontrun{
# Example 1: Points as data.frame
points <- data.frame(x = c(500000, 500100),
                    y = c(4000000, 4000100))
river.centerline(input_raster = "path_to_dem.tif",
                 points = points,
                 output_dir = "flow_paths.shp")

# Example 2: Points as shapefile
river.centerline(input_raster = "path_to_dem.tif",
                 points = "points.shp",
                 output_dir = "flow_paths.shp")

# Example 3: Points as GeoPackage
river.centerline(input_raster = "path_to_dem.tif",
                 points = "points.gpkg",
                 output_dir = "flow_paths.shp")
}

}
